<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>哈哈哈哈哈</title>
    <link href="/2021/09/12/test/"/>
    <url>/2021/09/12/test/</url>
    
    <content type="html"><![CDATA[<h1 id="昨日内容回顾"><a href="#昨日内容回顾" class="headerlink" title="昨日内容回顾"></a>昨日内容回顾</h1><h2 id="事务和锁"><a href="#事务和锁" class="headerlink" title="事务和锁"></a>事务和锁</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> transaction<br><br><span class="hljs-meta">@transaction.atomic</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">request</span>):</span><br>..<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">request</span>):</span><br>...<br><br><span class="hljs-comment">#上下文</span><br><span class="hljs-keyword">with</span> transaction.atomic():<br>...<br><br>    ...<br>    <br>锁:<br>models.Book.objects.select_for_update().<span class="hljs-built_in">filter</span>(<span class="hljs-built_in">id</span>=<span class="hljs-number">1</span>)<br><br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python">五个方法<br>process_request<br>process_response<br>process_view<br>process_exception<br>process_template_response<br><br><br>自定义中间件<br>应用下 创建一个文件夹,例如xx文件夹<br>创建一个py文件,oo.py<br><br><span class="hljs-keyword">from</span> django.utils.deprecation <span class="hljs-keyword">import</span> MiddleWareMixin<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyAuth</span>(<span class="hljs-params">MiddleWareMixin</span>):</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">process_request</span>(<span class="hljs-params">self,request</span>):</span><br>request<br>...<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">process_response</span>(<span class="hljs-params">self,request,response</span>):</span><br><span class="hljs-keyword">return</span> response<br><br></code></pre></td></tr></table></figure><p>请求–wsgi.py–中间件(process_request)–urls.py–视图(数据库:orm,template:html)–中间(process_response)</p><h1 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h1><h2 id="form组件"><a href="#form组件" class="headerlink" title="form组件"></a>form组件</h2><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>生成html标签<br><span class="hljs-symbol">2 </span>保留原来的数据<br><span class="hljs-symbol">3 </span>校验用户提交的数据<br></code></pre></td></tr></table></figure><p>正则校验器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.core.validators <span class="hljs-keyword">import</span> RegexValidator<br> <br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyForm</span>(<span class="hljs-params">Form</span>):</span><br>    user = fields.CharField(<br>        validators=[RegexValidator(<span class="hljs-string">r&#x27;^[0-9]+$&#x27;</span>, <span class="hljs-string">&#x27;请输入数字&#x27;</span>), RegexValidator(<span class="hljs-string">r&#x27;^159[0-9]+$&#x27;</span>, <span class="hljs-string">&#x27;数字必须以159开头&#x27;</span>)],<br>    )<br></code></pre></td></tr></table></figure><p>校验函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"> <br><span class="hljs-comment"># 自定义验证规则</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">mobile_validate</span>(<span class="hljs-params">value</span>):</span><br>    mobile_re = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]&#123;8&#125;$&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> mobile_re.match(value):<br>        <span class="hljs-keyword">raise</span> ValidationError(<span class="hljs-string">&#x27;手机号码格式错误&#x27;</span>)  <span class="hljs-comment">#自定义验证规则的时候，如果不符合你的规则，需要自己发起错误</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyForm</span>(<span class="hljs-params">Form</span>):</span><br>    user = fields.CharField(<br>        validators=[mobile_validate，],<br>    )<br><br>        <br></code></pre></td></tr></table></figure><p>局部钩子</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs routeros">class LoginForm(forms.Form):<br>    username = forms.CharField(<br>        <span class="hljs-attribute">min_length</span>=8,<br>        <span class="hljs-attribute">label</span>=<span class="hljs-string">&quot;用户名&quot;</span>,<br>        <span class="hljs-attribute">initial</span>=<span class="hljs-string">&quot;张三&quot;</span>,<br>        error_messages=&#123;<br>            <span class="hljs-string">&quot;required&quot;</span>: <span class="hljs-string">&quot;不能为空&quot;</span>,<br>            <span class="hljs-string">&quot;invalid&quot;</span>: <span class="hljs-string">&quot;格式错误&quot;</span>,<br>            <span class="hljs-string">&quot;min_length&quot;</span>: <span class="hljs-string">&quot;用户名最短8位&quot;</span><br>        &#125;,<br>        <span class="hljs-attribute">widget</span>=forms.widgets.TextInput(attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;form-control&quot;</span>&#125;)<br>    )<br>    <span class="hljs-built_in">..</span>.<br>    # 定义局部钩子，用来校验username字段,之前的校验股则还在，给你提供了一个添加一些校验功能的钩子<br>    def clean_username(self):<br>        value = self.cleaned_data.<span class="hljs-builtin-name">get</span>(<span class="hljs-string">&quot;username&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;666&quot;</span> <span class="hljs-keyword">in</span> value:<br>            raise ValidationError(<span class="hljs-string">&quot;光喊666是不行的&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            return value<br></code></pre></td></tr></table></figure><p>全局钩子</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs routeros">class LoginForm(forms.Form):<br>    <span class="hljs-built_in">..</span>.<br>    password = forms.CharField(<br>        <span class="hljs-attribute">min_length</span>=6,<br>        <span class="hljs-attribute">label</span>=<span class="hljs-string">&quot;密码&quot;</span>,<br>        <span class="hljs-attribute">widget</span>=forms.widgets.PasswordInput(attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;form-control&#x27;</span>&#125;, <span class="hljs-attribute">render_value</span>=<span class="hljs-literal">True</span>)<br>    )<br>    re_password = forms.CharField(<br>        <span class="hljs-attribute">min_length</span>=6,<br>        <span class="hljs-attribute">label</span>=<span class="hljs-string">&quot;确认密码&quot;</span>,<br>        <span class="hljs-attribute">widget</span>=forms.widgets.PasswordInput(attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;form-control&#x27;</span>&#125;, <span class="hljs-attribute">render_value</span>=<span class="hljs-literal">True</span>)<br>    )<br>    <span class="hljs-built_in">..</span>.<br>    # 定义全局的钩子，用来校验密码和确认密码字段是否相同，执行全局钩子的时候，cleaned_data里面肯定是有了通过前面验证的所有数据<br>    def clean(self):<br>        password_value = self.cleaned_data.<span class="hljs-builtin-name">get</span>(<span class="hljs-string">&#x27;password&#x27;</span>)<br>        re_password_value = self.cleaned_data.<span class="hljs-builtin-name">get</span>(<span class="hljs-string">&#x27;re_password&#x27;</span>)<br>        <span class="hljs-keyword">if</span> password_value == re_password_value:<br>            return self.cleaned_data #全局钩子要返回所有的数据<br>        <span class="hljs-keyword">else</span>:<br>            self.add_error(<span class="hljs-string">&#x27;re_password&#x27;</span>, <span class="hljs-string">&#x27;两次密码不一致&#x27;</span>) #在re_password这个字段的错误列表中加上一个错误，并且clean_data里面会自动清除这个re_password的值，所以打印clean_data的时候会看不到它<br>            #raise ValidationError(<span class="hljs-string">&#x27;两次密码不一致&#x27;</span>)<br></code></pre></td></tr></table></figure><p>大致流程</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">字段内部属性相关校验</span>--<span class="hljs-comment">局部钩子校验</span>--<span class="hljs-literal">-</span><span class="hljs-comment">然后循环下一个字段进行上面两步校验</span> -- <span class="hljs-comment">最后执行全局钩子</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
